{"ast":null,"code":"var _jsxFileName = \"/Users/edwardplasencio/Desktop/punchCode/white-bear-fullstack/client/src/components/UI/SignUp.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayingInputs: false\n    };\n  }\n\n  showInputs() {\n    this.setState({\n      isDisplayingInputs: true,\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    });\n  }\n\n  async setEmailState(emailInput) {\n    console.log(emailInput);\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (!EMAIL_REGEX.test(String(lowerCasedEmailInput))) {\n      this.setState({\n        emailError: \"Please enter A VALID email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;else if (localPart.length < 4) return false;else return passwordInput.includes(localPart);\n  }\n\n  async setPasswordState(passwordInput, emailInput) {\n    console.log(passwordInput);\n    const uniqChars = [...new Set(passwordInput)];\n\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please create a password.\",\n        hasPasswordError: true\n      });\n    } else if (passwordInput.length < 9) {\n      this.setState({\n        passwordError: \"Password must be 9 characters.\",\n        hasPasswordError: true\n      });\n    } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n      this.setState({\n        passwordError: \"Password cannot contain your email address.\",\n        hasPasswordError: true\n      });\n    } else if (uniqChars.length < 3) {\n      this.setState({\n        passwordError: \"Password msut contain more then 3 unique characters.\",\n        hasPasswordError: true\n      });\n    } else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndCreateUser() {\n    const emailInput = document.getElementById(\"email-input\").value;\n    const passwordInput = document.getElementById(\"password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdOn: Date.now()\n      };\n      console.log(\"created user object for POST\", user);\n      axios.get(\"https://raw.githubusercontent.com/Edd-wordd/white-bear-mpa/master/src/mock%20data/user.JSON\").then(res => {\n        // handle success\n        const currentUser = res.data;\n        console.log(currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        });\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      });\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"offset-1 col-10 offset-sm-2 col-sm-8 offset-md-1 col-md-5 offset-lg-2 col-lg-4 offset-xl-1 col-xl-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-3 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }\n    }, \"Nice to meet you\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    }, \"Sign up for White Bear. Free forever\"), this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-5 text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }\n    }, \"Let's get you signed up.\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 22\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.hasEmailError\n      }),\n      id: \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-danger mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 22\n      }\n    }, \"Create a password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 22\n      }\n    }, \"Must be at least 9 characters.\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      id: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 22\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 28\n      }\n    }, this.state.passwordError)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success float-right btn-block btn-lg  mt-3\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 22\n      }\n    }, \"Let's go!\")), !this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success float-right w-100 car btn-lg\",\n      onClick: () => {\n        this.showInputs();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 22\n      }\n    }, \"Sign up\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(SignUp));","map":{"version":3,"sources":["/Users/edwardplasencio/Desktop/punchCode/white-bear-fullstack/client/src/components/UI/SignUp.js"],"names":["React","classnames","hash","v4","getUuid","EMAIL_REGEX","withRouter","connect","axios","actions","SignUp","Component","constructor","props","state","isDisplayingInputs","showInputs","setState","emailError","passwordError","hasEmailError","hasPasswordError","setEmailState","emailInput","console","log","lowerCasedEmailInput","toLowerCase","test","String","checkHasLocalPart","passwordInput","localPart","split","length","includes","setPasswordState","uniqChars","Set","validateAndCreateUser","document","getElementById","value","user","id","email","password","createdOn","Date","now","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\n\nclass SignUp extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         isDisplayingInputs: false,\n      };\n   }\n   showInputs() {\n      this.setState({\n         isDisplayingInputs: true,\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         hasPasswordError: false,\n      });\n   }\n   async setEmailState(emailInput) {\n      console.log(emailInput);\n      const lowerCasedEmailInput = emailInput.toLowerCase();\n\n      if (emailInput === \"\")\n         this.setState({\n            emailError: \"Please enter your email address.\",\n            hasEmailError: true,\n         });\n      else if (!EMAIL_REGEX.test(String(lowerCasedEmailInput))) {\n         this.setState({\n            emailError: \"Please enter A VALID email address.\",\n            hasEmailError: true,\n         });\n      } else {\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n   checkHasLocalPart(passwordInput, emailInput) {\n      const localPart = emailInput.split(\"@\")[0];\n      if (localPart === \"\") return false;\n      else if (localPart.length < 4) return false;\n      else return passwordInput.includes(localPart);\n   }\n\n   async setPasswordState(passwordInput, emailInput) {\n      console.log(passwordInput);\n      const uniqChars = [...new Set(passwordInput)];\n      if (passwordInput === \"\") {\n         this.setState({\n            passwordError: \"Please create a password.\",\n            hasPasswordError: true,\n         });\n      } else if (passwordInput.length < 9) {\n         this.setState({\n            passwordError: \"Password must be 9 characters.\",\n            hasPasswordError: true,\n         });\n      } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n         this.setState({\n            passwordError: \"Password cannot contain your email address.\",\n            hasPasswordError: true,\n         });\n      } else if (uniqChars.length < 3) {\n         this.setState({\n            passwordError:\n               \"Password msut contain more then 3 unique characters.\",\n            hasPasswordError: true,\n         });\n      } else {\n         this.setState({ passwordError: \"\", hasPasswordError: false });\n      }\n   }\n\n   async validateAndCreateUser() {\n      const emailInput = document.getElementById(\"email-input\").value;\n      const passwordInput = document.getElementById(\"password-input\").value;\n\n      await this.setEmailState(emailInput);\n      await this.setPasswordState(passwordInput, emailInput);\n      if (\n         this.state.hasEmailError === false &&\n         this.state.hasPasswordError === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: emailInput,\n            password: hash(passwordInput),\n            createdOn: Date.now(),\n         };\n         console.log(\"created user object for POST\", user);\n         axios\n            .get(\n               \"https://raw.githubusercontent.com/Edd-wordd/white-bear-mpa/master/src/mock%20data/user.JSON\"\n            )\n            .then((res) => {\n               // handle success\n               const currentUser = res.data;\n               console.log(currentUser);\n               this.props.dispatch({\n                  type: actions.UPDATE_CURRENT_USER,\n                  payload: res.data,\n               });\n            })\n            .catch((error) => {\n               // handle error\n               console.log(error);\n            });\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n   render() {\n      return (\n         <div className=\"offset-1 col-10 offset-sm-2 col-sm-8 offset-md-1 col-md-5 offset-lg-2 col-lg-4 offset-xl-1 col-xl-4\">\n            <div className=\"card p-3 mb-5\">\n               <h2 className=\"card-title\">Nice to meet you</h2>\n               <p className=\"mb-5\">Sign up for White Bear. Free forever</p>\n               {this.state.isDisplayingInputs && (\n                  <>\n                     <p className=\"mb-5 text-success\">\n                        Let's get you signed up.\n                     </p>\n\n                     <label htmlFor=\"email\">Email address</label>\n                     <input\n                        type=\"email\"\n                        className={classnames({\n                           \"form-control\": true,\n                           \"is-invalid\": this.state.hasEmailError,\n                        })}\n                        id=\"email-input\"\n                     />\n\n                     {this.state.hasEmailError && (\n                        <small className=\"text-danger mb-3\">\n                           {this.state.emailError}\n                        </small>\n                     )}\n\n                     <label htmlFor=\"password\">Create a password</label>\n\n                     <span className=\"text-muted\">\n                        Must be at least 9 characters.\n                     </span>\n                     <input\n                        type=\"password\"\n                        className={classnames({\n                           \"form-control\": true,\n                           \"is-invalid\": this.state.hasPasswordError,\n                        })}\n                        id=\"password-input\"\n                     />\n                     {this.state.hasPasswordError && (\n                        <div className=\"text-danger \">\n                           <small>{this.state.passwordError}</small>\n                        </div>\n                     )}\n\n                     <button\n                        className=\"btn btn-success float-right btn-block btn-lg  mt-3\"\n                        onClick={() => {\n                           this.validateAndCreateUser();\n                        }}\n                     >\n                        Let's go!\n                     </button>\n                  </>\n               )}\n               {!this.state.isDisplayingInputs && (\n                  <>\n                     <button\n                        className=\"btn btn-success float-right w-100 car btn-lg\"\n                        onClick={() => {\n                           this.showInputs();\n                        }}\n                     >\n                        Sign up\n                     </button>\n                  </>\n               )}\n            </div>\n         </div>\n      );\n   }\n}\nfunction mapStateToProps(state) {\n   return {};\n}\nexport default withRouter(connect(mapStateToProps)(SignUp));\n"]},"metadata":{},"sourceType":"module"}