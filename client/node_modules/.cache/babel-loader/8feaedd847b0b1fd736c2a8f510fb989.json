{"ast":null,"code":"var _jsxFileName = \"/Users/edwardplasencio/Desktop/punchCode/white-bear-fullstack/client/src/components/pages/Edit.js\";\nimport React from \"react\";\nimport AppTemplate from \"../UI/appTemplate\";\nimport saveIcon from \"../../icons/save.svg\";\nimport { Link } from \"react-router-dom\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport memoryCards from \"../../mock data/memory-cards\";\nimport without from \"lodash/without\";\nimport actions from \"../../store/actions\";\nconst memoryCard = memoryCards[2];\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props); // console.timeLog(\"edwrd is here\");\n\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n      isChecked: false\n    };\n  }\n\n  checkHasInvalidCharCount() {\n    if (this.state.answerText.length > MAX_CARD_CHARS || this.state.answerText.length <= 0 || this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length <= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setImageryText(e) {\n    console.log(e.target, e.target.value);\n    this.setState({\n      imageryText: e.target.value\n    });\n  }\n\n  setAnswerText(e) {\n    this.setState({\n      answerText: e.target.value\n    });\n  }\n\n  isDeleteButtonShown() {\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n  }\n\n  deleteCard() {\n    if (this.props.editableCard.prevRoute === \"/review-answer\") {\n      this.deleteCardFromStore();\n    }\n\n    if (this.props.editableCard.prevRoute === \"/all-cards\") {\n      this.props.history.push(\"/all-cards\");\n    }\n  }\n\n  deleteCardFromStore() {\n    const deletedCard = this.props.editableCard.card;\n    const cards = this.props.queue.cards;\n    const filteredCards = without(cards, deletedCard);\n    console.log(filteredCards);\n    this.props.dispatch({\n      type: actions.STORE_QUEUED_CARDS,\n      payload: filteredCards\n    });\n\n    if (filteredCards[this.props.queue.index] === undefined) {\n      this.props.history.push(\"/review-empty\");\n    } else {\n      this.props.history.push(\"/review-imagery\");\n    }\n  }\n\n  changeRoute(prevRoute) {\n    if (this.props.queue.cards[this.props.queue.index] === undefined) {\n      return \"/review-empty\";\n    }\n\n    if (prevRoute === \"/review-answer\") {\n      return \"/review-imagery\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"my-4 text-center text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Edit card\"), isEmpty(this.props.editableCard) === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body secondCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"w-100 d-sm-nope\",\n      rows: \"11\",\n      defaultValue: this.props.editableCard.card.imagery,\n      onChange: e => this.setImageryText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 28\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body secondCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"w-100 d-sm-nope\",\n      rows: \"5\",\n      defaultValue: this.props.editableCard.card.answer,\n      onChange: e => this.setAnswerText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 28\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 22\n      }\n    }, \"top: \", this.state.imageryText.length, \"/\", MAX_CARD_CHARS), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 22\n      }\n    }, \"Bottom: \", this.state.answerText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: \"btn btn-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, \"Discard changes\"), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      id: \"save-imagery\",\n      className: classnames(\"btn btn-primary btn-lg float-right\", {\n        disabled: this.checkHasInvalidCharCount()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mb-1\",\n      src: saveIcon,\n      width: \"20px;\",\n      style: {\n        marginTop: \"5px\",\n        marginRight: \"8px\"\n      },\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 22\n      }\n    }), \"Save\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-center mt-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"Card properties\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted col-4 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 22\n      }\n    }, \"Created: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 34\n      }\n    }), \"Last attempt: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 39\n      }\n    }), \"Next attempt: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 39\n      }\n    }), \"Consecutives:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 22\n      }\n    }, toDisplayDate(this.props.editableCard.card.createdAt, \"MMM. d, y\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }), toDisplayDate(this.props.editableCard.card.lastAttemptAt, \"MMM. d, y\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }), toDisplayDate(this.props.editableCard.card.nextAttemptAt, \"MMM. d, y\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), this.props.editableCard.card.totalSuccessfulAttempts, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox col-12 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"customCheck1\",\n      defaultChecked: this.state.isChecked,\n      onClick: () => {\n        this.isDeleteButtonShown();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"customCheck1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, \"Show delete button\")), this.state.isChecked && /*#__PURE__*/React.createElement(\"button\", {\n      id: \"delete-card\",\n      className: \"btn btn-outline-danger btn-lg \",\n      onClick: () => {\n        this.deleteCard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Delete this card\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    editableCard: state.editableCard,\n    queue: state.queue\n  };\n}\n\nexport default connect(mapStateToProps)(Edit);","map":{"version":3,"sources":["/Users/edwardplasencio/Desktop/punchCode/white-bear-fullstack/client/src/components/pages/Edit.js"],"names":["React","AppTemplate","Link","toDisplayDate","classnames","checkIsOver","MAX_CARD_CHARS","connect","isEmpty","memoryCards","without","actions","memoryCard","Edit","Component","constructor","props","state","answerText","answer","imageryText","imagery","isChecked","checkHasInvalidCharCount","length","setImageryText","e","console","log","target","value","setState","setAnswerText","isDeleteButtonShown","deleteCard","editableCard","prevRoute","deleteCardFromStore","history","push","deletedCard","card","cards","queue","filteredCards","dispatch","type","STORE_QUEUED_CARDS","payload","index","undefined","changeRoute","render","disabled","saveIcon","marginTop","marginRight","createdAt","lastAttemptAt","nextAttemptAt","totalSuccessfulAttempts","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,qBAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAMC,UAAU,GAAGH,WAAW,CAAC,CAAD,CAA9B;;AACA,MAAMI,IAAN,SAAmBb,KAAK,CAACc,SAAzB,CAAmC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN,EADgB,CAEhB;;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,UAAU,EAAEN,UAAU,CAACO,MADb;AAEVC,MAAAA,WAAW,EAAER,UAAU,CAACS,OAFd;AAGVC,MAAAA,SAAS,EAAE;AAHD,KAAb;AAKF;;AACDC,EAAAA,wBAAwB,GAAG;AACxB,QACG,KAAKN,KAAL,CAAWC,UAAX,CAAsBM,MAAtB,GAA+BlB,cAA/B,IACA,KAAKW,KAAL,CAAWC,UAAX,CAAsBM,MAAtB,IAAgC,CADhC,IAEA,KAAKP,KAAL,CAAWG,WAAX,CAAuBI,MAAvB,GAAgClB,cAFhC,IAGA,KAAKW,KAAL,CAAWG,WAAX,CAAuBI,MAAvB,IAAiC,CAJpC,EAKE;AACC,aAAO,IAAP;AACF,KAPD,MAOO;AACJ,aAAO,KAAP;AACF;AACH;;AAEDC,EAAAA,cAAc,CAACC,CAAD,EAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd,EAAsBH,CAAC,CAACG,MAAF,CAASC,KAA/B;AACA,SAAKC,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAEM,CAAC,CAACG,MAAF,CAASC;AAAxB,KAAd;AACF;;AACDE,EAAAA,aAAa,CAACN,CAAD,EAAI;AACd,SAAKK,QAAL,CAAc;AAAEb,MAAAA,UAAU,EAAEQ,CAAC,CAACG,MAAF,CAASC;AAAvB,KAAd;AACF;;AACDG,EAAAA,mBAAmB,GAAG;AACnB,SAAKF,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAAzB,KAAd;AACF;;AACDY,EAAAA,UAAU,GAAG;AACV,QAAI,KAAKlB,KAAL,CAAWmB,YAAX,CAAwBC,SAAxB,KAAsC,gBAA1C,EAA4D;AACzD,WAAKC,mBAAL;AACF;;AACD,QAAI,KAAKrB,KAAL,CAAWmB,YAAX,CAAwBC,SAAxB,KAAsC,YAA1C,EAAwD;AACrD,WAAKpB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACF;AACH;;AACDF,EAAAA,mBAAmB,GAAG;AACnB,UAAMG,WAAW,GAAG,KAAKxB,KAAL,CAAWmB,YAAX,CAAwBM,IAA5C;AACA,UAAMC,KAAK,GAAG,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBD,KAA/B;AACA,UAAME,aAAa,GAAGlC,OAAO,CAACgC,KAAD,EAAQF,WAAR,CAA7B;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYgB,aAAZ;AAEA,SAAK5B,KAAL,CAAW6B,QAAX,CAAoB;AACjBC,MAAAA,IAAI,EAAEnC,OAAO,CAACoC,kBADG;AAEjBC,MAAAA,OAAO,EAAEJ;AAFQ,KAApB;;AAIA,QAAIA,aAAa,CAAC,KAAK5B,KAAL,CAAW2B,KAAX,CAAiBM,KAAlB,CAAb,KAA0CC,SAA9C,EAAyD;AACtD,WAAKlC,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACF,KAFD,MAEO;AACJ,WAAKvB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB;AACF;AACH;;AAEDY,EAAAA,WAAW,CAACf,SAAD,EAAY;AACpB,QAAI,KAAKpB,KAAL,CAAW2B,KAAX,CAAiBD,KAAjB,CAAuB,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBM,KAAxC,MAAmDC,SAAvD,EAAkE;AAC/D,aAAO,eAAP;AACF;;AACD,QAAId,SAAS,KAAK,gBAAlB,EAAoC;AACjC,aAAO,iBAAP;AACF;AACH;;AACDgB,EAAAA,MAAM,GAAG;AACN,wBACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,EAGI5C,OAAO,CAAC,KAAKQ,KAAL,CAAWmB,YAAZ,CAAP,KAAqC,KAArC,iBACE,uDACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AACG,MAAA,SAAS,EAAC,iBADb;AAEG,MAAA,IAAI,EAAC,IAFR;AAGG,MAAA,YAAY,EACT,KAAKnB,KAAL,CAAWmB,YAAX,CAAwBM,IAAxB,CAA6BpB,OAJnC;AAMG,MAAA,QAAQ,EAAGK,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADH,CADH,eAaG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AACG,MAAA,SAAS,EAAC,iBADb;AAEG,MAAA,IAAI,EAAC,GAFR;AAGG,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAWmB,YAAX,CAAwBM,IAAxB,CAA6BtB,MAH9C;AAIG,MAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKM,aAAL,CAAmBN,CAAnB,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADH,CAbH,CADH,eAyBG;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AACG,MAAA,SAAS,EAAEtB,UAAU,CAAC;AACnB,uBAAeC,WAAW,CACvB,KAAKY,KAAL,CAAWG,WADY,EAEvBd,cAFuB;AADP,OAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAQS,KAAKW,KAAL,CAAWG,WAAX,CAAuBI,MARhC,OAQyClB,cARzC,CADH,+BAYG;AACG,MAAA,SAAS,EAAEF,UAAU,CAAC;AACnB,uBAAeC,WAAW,CACvB,KAAKY,KAAL,CAAWC,UADY,EAEvBZ,cAFuB;AADP,OAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQY,KAAKW,KAAL,CAAWC,UAAX,CAAsBM,MARlC,OAQ2ClB,cAR3C,CAZH,CAzBH,eAgDG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDH,eAiDG,oBAAC,IAAD;AACG,MAAA,EAAE,EAAE,KAAKU,KAAL,CAAWmB,YAAX,CAAwBC,SAD/B;AAEG,MAAA,SAAS,EAAC,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAjDH,eAuDG,oBAAC,IAAD;AACG,MAAA,EAAE,EAAE,KAAKpB,KAAL,CAAWmB,YAAX,CAAwBC,SAD/B;AAEG,MAAA,EAAE,EAAC,cAFN;AAGG,MAAA,SAAS,EAAEhC,UAAU,CAClB,oCADkB,EAElB;AACGiD,QAAAA,QAAQ,EAAE,KAAK9B,wBAAL;AADb,OAFkB,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUG;AACG,MAAA,SAAS,EAAC,MADb;AAEG,MAAA,GAAG,EAAE+B,QAFR;AAGG,MAAA,KAAK,EAAC,OAHT;AAIG,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,WAAW,EAAE;AAAjC,OAJV;AAKG,MAAA,GAAG,EAAC,EALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVH,SAvDH,eA0EG;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA1EH,eA6EG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,iCAEiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFjB,iCAGiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHjB,gCAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,CADH,eASG;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIrD,aAAa,CACX,KAAKa,KAAL,CAAWmB,YAAX,CAAwBM,IAAxB,CAA6BgB,SADlB,EAEX,WAFW,CADjB,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMItD,aAAa,CACX,KAAKa,KAAL,CAAWmB,YAAX,CAAwBM,IAAxB,CAA6BiB,aADlB,EAEX,WAFW,CANjB,eAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVH,EAWIvD,aAAa,CACX,KAAKa,KAAL,CAAWmB,YAAX,CAAwBM,IAAxB,CAA6BkB,aADlB,EAEX,WAFW,CAXjB,eAeG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfH,EAgBI,KAAK3C,KAAL,CAAWmB,YAAX,CAAwBM,IAAxB,CAA6BmB,uBAhBjC,eAiBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBH,CATH,eA6BG;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AACG,MAAA,IAAI,EAAC,UADR;AAEG,MAAA,SAAS,EAAC,sBAFb;AAGG,MAAA,EAAE,EAAC,cAHN;AAIG,MAAA,cAAc,EAAE,KAAK3C,KAAL,CAAWK,SAJ9B;AAKG,MAAA,OAAO,EAAE,MAAM;AACZ,aAAKW,mBAAL;AACF,OAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAUG;AACG,MAAA,SAAS,EAAC,sBADb;AAEG,MAAA,OAAO,EAAC,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVH,CA7BH,EA8CI,KAAKhB,KAAL,CAAWK,SAAX,iBACE;AACG,MAAA,EAAE,EAAC,aADN;AAEG,MAAA,SAAS,EAAC,gCAFb;AAGG,MAAA,OAAO,EAAE,MAAM;AACZ,aAAKY,UAAL;AACF,OALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/CN,CA7EH,CAJN,CADH;AAgJF;;AAnN+B;;AAqNnC,SAAS2B,eAAT,CAAyB5C,KAAzB,EAAgC;AAC7B,SAAO;AACJkB,IAAAA,YAAY,EAAElB,KAAK,CAACkB,YADhB;AAEJQ,IAAAA,KAAK,EAAE1B,KAAK,CAAC0B;AAFT,GAAP;AAIF;;AACD,eAAepC,OAAO,CAACsD,eAAD,CAAP,CAAyBhD,IAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport AppTemplate from \"../UI/appTemplate\";\nimport saveIcon from \"../../icons/save.svg\";\nimport { Link } from \"react-router-dom\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport memoryCards from \"../../mock data/memory-cards\";\nimport without from \"lodash/without\";\nimport actions from \"../../store/actions\";\n\nconst memoryCard = memoryCards[2];\nclass Edit extends React.Component {\n   constructor(props) {\n      super(props);\n      // console.timeLog(\"edwrd is here\");\n      this.state = {\n         answerText: memoryCard.answer,\n         imageryText: memoryCard.imagery,\n         isChecked: false,\n      };\n   }\n   checkHasInvalidCharCount() {\n      if (\n         this.state.answerText.length > MAX_CARD_CHARS ||\n         this.state.answerText.length <= 0 ||\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length <= 0\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   setImageryText(e) {\n      console.log(e.target, e.target.value);\n      this.setState({ imageryText: e.target.value });\n   }\n   setAnswerText(e) {\n      this.setState({ answerText: e.target.value });\n   }\n   isDeleteButtonShown() {\n      this.setState({ isChecked: !this.state.isChecked });\n   }\n   deleteCard() {\n      if (this.props.editableCard.prevRoute === \"/review-answer\") {\n         this.deleteCardFromStore();\n      }\n      if (this.props.editableCard.prevRoute === \"/all-cards\") {\n         this.props.history.push(\"/all-cards\");\n      }\n   }\n   deleteCardFromStore() {\n      const deletedCard = this.props.editableCard.card;\n      const cards = this.props.queue.cards;\n      const filteredCards = without(cards, deletedCard);\n      console.log(filteredCards);\n\n      this.props.dispatch({\n         type: actions.STORE_QUEUED_CARDS,\n         payload: filteredCards,\n      });\n      if (filteredCards[this.props.queue.index] === undefined) {\n         this.props.history.push(\"/review-empty\");\n      } else {\n         this.props.history.push(\"/review-imagery\");\n      }\n   }\n\n   changeRoute(prevRoute) {\n      if (this.props.queue.cards[this.props.queue.index] === undefined) {\n         return \"/review-empty\";\n      }\n      if (prevRoute === \"/review-answer\") {\n         return \"/review-imagery\";\n      }\n   }\n   render() {\n      return (\n         <AppTemplate>\n            <h4 className=\"my-4 text-center text-muted\">Edit card</h4>\n\n            {isEmpty(this.props.editableCard) === false && (\n               <>\n                  <div className=\"mb-2\">\n                     <div className=\"card bg-primary\">\n                        <div className=\"card-body secondCard\">\n                           <textarea\n                              className=\"w-100 d-sm-nope\"\n                              rows=\"11\"\n                              defaultValue={\n                                 this.props.editableCard.card.imagery\n                              }\n                              onChange={(e) => this.setImageryText(e)}\n                           ></textarea>\n                        </div>\n                     </div>\n                     <div className=\"card bg-secondary\">\n                        <div className=\"card-body secondCard\">\n                           <textarea\n                              className=\"w-100 d-sm-nope\"\n                              rows=\"5\"\n                              defaultValue={this.props.editableCard.card.answer}\n                              onChange={(e) => this.setAnswerText(e)}\n                           ></textarea>\n                        </div>\n                     </div>\n                  </div>\n                  <p className=\"float-right mb-5\">\n                     <span\n                        className={classnames({\n                           \"text-danger\": checkIsOver(\n                              this.state.imageryText,\n                              MAX_CARD_CHARS\n                           ),\n                        })}\n                     >\n                        top: {this.state.imageryText.length}/{MAX_CARD_CHARS}\n                     </span>\n                     &nbsp;&nbsp;&nbsp;\n                     <span\n                        className={classnames({\n                           \"text-danger\": checkIsOver(\n                              this.state.answerText,\n                              MAX_CARD_CHARS\n                           ),\n                        })}\n                     >\n                        Bottom: {this.state.answerText.length}/{MAX_CARD_CHARS}\n                     </span>\n                  </p>\n                  <div className=\"clearfix\"></div>\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className=\"btn btn-link\"\n                  >\n                     Discard changes\n                  </Link>\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     id=\"save-imagery\"\n                     className={classnames(\n                        \"btn btn-primary btn-lg float-right\",\n                        {\n                           disabled: this.checkHasInvalidCharCount(),\n                        }\n                     )}\n                  >\n                     <img\n                        className=\"mb-1\"\n                        src={saveIcon}\n                        width=\"20px;\"\n                        style={{ marginTop: \"5px\", marginRight: \"8px\" }}\n                        alt=\"\"\n                     />\n                     Save\n                  </Link>\n                  <h4 className=\"text-center mt-5 text-muted\">\n                     Card properties\n                  </h4>\n                  <div className=\"row mt-5\">\n                     <p className=\"text-muted col-4 mb-5\">\n                        Created: <br />\n                        Last attempt: <br />\n                        Next attempt: <br />\n                        Consecutives:\n                        <br />\n                     </p>\n\n                     <p className=\"col-5\">\n                        {toDisplayDate(\n                           this.props.editableCard.card.createdAt,\n                           \"MMM. d, y\"\n                        )}\n                        <br />\n                        {toDisplayDate(\n                           this.props.editableCard.card.lastAttemptAt,\n                           \"MMM. d, y\"\n                        )}\n                        <br />\n                        {toDisplayDate(\n                           this.props.editableCard.card.nextAttemptAt,\n                           \"MMM. d, y\"\n                        )}\n                        <br />\n                        {this.props.editableCard.card.totalSuccessfulAttempts}\n                        <br />\n                     </p>\n\n                     <div className=\"custom-control custom-checkbox col-12 mb-2\">\n                        <input\n                           type=\"checkbox\"\n                           className=\"custom-control-input\"\n                           id=\"customCheck1\"\n                           defaultChecked={this.state.isChecked}\n                           onClick={() => {\n                              this.isDeleteButtonShown();\n                           }}\n                        />\n                        <label\n                           className=\"custom-control-label\"\n                           htmlFor=\"customCheck1\"\n                        >\n                           Show delete button\n                        </label>\n                     </div>\n                     {this.state.isChecked && (\n                        <button\n                           id=\"delete-card\"\n                           className=\"btn btn-outline-danger btn-lg \"\n                           onClick={() => {\n                              this.deleteCard();\n                           }}\n                        >\n                           Delete this card\n                        </button>\n                     )}\n                  </div>\n               </>\n            )}\n         </AppTemplate>\n      );\n   }\n}\nfunction mapStateToProps(state) {\n   return {\n      editableCard: state.editableCard,\n      queue: state.queue,\n   };\n}\nexport default connect(mapStateToProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}