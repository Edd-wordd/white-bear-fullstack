{"ast":null,"code":"import _objectSpread from\"/Users/edwardplasencio/Desktop/punchCode/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import actions from\"../actions\";export default function queue(){var queue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;var newQueue=_objectSpread({},queue);switch(action.type){case actions.STORE_QUEUED_CARDS:newQueue.cards=action.payload;return newQueue;case actions.INCREMENT_QUEUE_INDEX:newQueue.index+=1;return newQueue;case actions.DECREMENT_QUEUE_INDEX:newQueue.index-=1;return newQueue;case actions.RESET_QUEUE:newQueue.cards=[];newQueue.index=0;return newQueue;default:return queue;}}","map":{"version":3,"sources":["/Users/edwardplasencio/Desktop/punchCode/white-bear-fullstack/client/src/store/reducers/queue.js"],"names":["actions","queue","action","newQueue","type","STORE_QUEUED_CARDS","cards","payload","INCREMENT_QUEUE_INDEX","index","DECREMENT_QUEUE_INDEX","RESET_QUEUE"],"mappings":"0LAAA,MAAOA,CAAAA,OAAP,KAAoB,YAApB,CAEA,cAAe,SAASC,CAAAA,KAAT,EAAmC,IAApBA,CAAAA,KAAoB,2DAAZ,EAAY,IAARC,CAAAA,MAAQ,2CAC/C,GAAIC,CAAAA,QAAQ,kBAAQF,KAAR,CAAZ,CAEA,OAAQC,MAAM,CAACE,IAAf,EACG,IAAKJ,CAAAA,OAAO,CAACK,kBAAb,CACGF,QAAQ,CAACG,KAAT,CAAiBJ,MAAM,CAACK,OAAxB,CACA,MAAOJ,CAAAA,QAAP,CACH,IAAKH,CAAAA,OAAO,CAACQ,qBAAb,CACGL,QAAQ,CAACM,KAAT,EAAkB,CAAlB,CACA,MAAON,CAAAA,QAAP,CACH,IAAKH,CAAAA,OAAO,CAACU,qBAAb,CACGP,QAAQ,CAACM,KAAT,EAAkB,CAAlB,CACA,MAAON,CAAAA,QAAP,CACH,IAAKH,CAAAA,OAAO,CAACW,WAAb,CACGR,QAAQ,CAACG,KAAT,CAAiB,EAAjB,CACAH,QAAQ,CAACM,KAAT,CAAiB,CAAjB,CACA,MAAON,CAAAA,QAAP,CACH,QACG,MAAOF,CAAAA,KAAP,CAfN,CAiBF","sourcesContent":["import actions from \"../actions\";\n\nexport default function queue(queue = {}, action) {\n   let newQueue = { ...queue };\n\n   switch (action.type) {\n      case actions.STORE_QUEUED_CARDS:\n         newQueue.cards = action.payload;\n         return newQueue;\n      case actions.INCREMENT_QUEUE_INDEX:\n         newQueue.index += 1;\n         return newQueue;\n      case actions.DECREMENT_QUEUE_INDEX:\n         newQueue.index -= 1;\n         return newQueue;\n      case actions.RESET_QUEUE:\n         newQueue.cards = [];\n         newQueue.index = 0;\n         return newQueue;\n      default:\n         return queue;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}